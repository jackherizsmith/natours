/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* using Chrome inspect element is great for fine tuning CSS*/

/* * and body to initialise page */

* { 
    margin: 0;
    padding: 0;
    box-sizing: border-box;         /*border and padding not added to total width and height*/
}

body {                              /*effectively parent element of all elements*/
    font-family:"Lato", sans serif; /*fonts are usually inherited, always call on body*/
    font-weight: 400;
    font-size: 16px;                /*probs change this*/
    line-height: 1.7;
    color: #777;
    padding:30px;   /*makes page pop a bit*/
}

.header {                       /*can just type bits of words to grab variable*/
    height: 95vh;
    background-image: linear-gradient(/*to layer images, the first one declared will be on top*/
        to right bottom,            /*CSS will work out where the gradient is going from -> to*/
        hsla(111, 55%, 64%, 0.8), /*set opactiy quickly with colour picker*/
        hsla(160, 64%, 43%, 0.8)), 
      url(../img/hero.jpg);     /*relative path*/
    background-size: cover;     /*will always try to fit image in box*/
    background-position: top;   /*fix image to top of screen despite resizing*/
                    /*for clip-path code out the box www.bennettfeely.com/clippy */
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);       /*define path of polygon with any number of x,y (% or any) co-ordinates, good to start top left and go clockwise*/
    
    position: relative; /*so that children e.g. .logo-box can be positioned*/
}                                       

.logo-box { /*order them by introduction in HTML*/
    position: absolute; /*can then use top, bottom, left, right to position exactly*/
    top: 40px;  /* needs a relative parent*/
    left: 40px;
}

.logo {
    height: 35px;       /*could do height or width, browser will work out the other*/
}

.text-box {
    position: absolute;
    top: 40%; /*can then change position once centred*/
    left: 50%;/*moves top left corner to centre of praent element*/
    transform: translate(-50%,-50%); /*shifts element back according to its own dimensions*/
    text-align: center;
}

.heading-primary{       /*good to sort format and style first and deal with positioning at the end*/
    color: #fff;
    margin-bottom: 60px;    /*to give space below heading*/

    backface-visibility: hidden;    /*animations can be jumpy - good to set this on a container of animated element to hide glitching*/
}

.heading-primary-main{
    display: block;    /*block level occupy entire available width and create line breaks before and after*/
    font-size: 60px;
    font-weight: 700; /*h1 higher by default*/
    letter-spacing: 21.5px;
    /*only need two properties for animation to work, timnig function is nice*/
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; /*control speed of animation*/    



    /* animation-delay: 3s; <- wait before starting animation */
    /* animation-iteration-count: 3; <- repeat */
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 11.3px;
    animation: moveInRight 1s ease-out; /*can push these properties together*/
}

/*could use a transition property and animate on event, but keyframes is more advanced one with options:*/

@keyframes moveInLeft { /*can call this animation on multiple elements*/
    0% {        /*start properties*/
        opacity: 0;
        transform: translateX(-100px);
    }

    70% {
        transform: translateX(10px);    /*flair*/
    }

    100% {      /*end properties*/
        opacity: 1;
        transform: translateX(0); /*reset value*/
    }
}

@keyframes moveInRight {
    0% {        
        opacity: 0;
        transform: translateX(100px);
    }

    70% {
        transform: translateX(-10px);
    }

    100% {   
        opacity: 1;
        transform: translateX(0);
    }
}

.btn:link,         /*pseudo when selector is an anchor element*/
.btn:visited {      /*visited once link has been visited*/
    text-transform: uppercase;
    text-decoration: none;  /*remove normal formatting so we can control colours for accessibility later on*/
    padding: 15px 40px;
    display: inline-block;  /*inline by default, when we want it to be a block (need height, width, padding etc). Treated as text (can be centre aligned in parent)*/
    border-radius: 100px;   /*above a certain value (half its height) it will remain rounded*/
    transition: all .2s;    /*transition sets new property - all transitions all properties including later states like :hover*/
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px hsla(0, 0%, 0%, 0.2);   /*x y blur colour*/
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px hsla(0, 0%, 0%, 0.2); /*Can use to imitate relative depth*/ 
}

.btn-white {
    color: #777;
    background-color: #fff;
}