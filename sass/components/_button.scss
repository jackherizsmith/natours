// has its own file button as this can be re-used elsewhere

.btn {
    &:link,       
    &:visited {   
        text-transform: uppercase;
        text-decoration: none;  
        padding: 1.5rem 4rem;
        display: inline-block; 
        border-radius: 10rem;   
        transition: all .2s;  
        position: relative;
        font-size: $default-font-size;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem hsla(0, 0%, 0%, .2);   /*x y blur colour*/

        &::after {
            transform: scaleX(1.5) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($colour-black, .2); 
    }

    &::after {   
        content:""; 
        display: inline-block; 
        height: 100%;
        width: 100%;
        
        border-radius: 10rem;
        position: absolute; 
        top: 0;
        left: 0;
        z-index: -1; 
        transition: all .4s; 
    }

    &--white {
        color: $colour-grey-dark;
        background-color: $colour-white;

        &::after {
            background-color: $colour-white;
        }
    }

    &--animated {
        animation: moveInBottom 0.5s ease-out 0.75s; 
        animation-fill-mode: backwards;
    }
}

.btn-text {
    &:link, 
    &:visited{
        font-size: $default-font-size;  // this comes up a lot, best as a variable
        color: $colour-primary;
        display: inline-block; // important so can edit box dimensions
        text-decoration: none; // to set on styling
        border-bottom: .1rem solid $colour-primary;
        padding: .3rem; // this could be wrong. for definitely fixed units on small things, px might be better but makes little difference
        transition: all .2s;
    }

    &:hover {
        background-color: $colour-primary;
        color: $colour-white;
        box-shadow: 0 1rem 2rem rgba($colour-black, .15);
        transform: translateY(-.2rem);
    }

    &:active {
        box-shadow: 0 1rem 2rem rgba($colour-black, .15);
        transform: translateY(0rem);
    }
}